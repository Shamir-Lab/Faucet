To run Mink, first type make in the directory to compile.

Then, type ./mink 1 2 3 4 5 6 7 [8], where
1 = name of reads file (current format is each line has a string of characters representing the read)
2 = k
3 = maximal read length
4 = number of distinct kmers.  This will be directly used to size the bloom filter so try to have a good estimate.
5 = false positive rate (.01 is a good base rate) 
6 = j.  j = 0 corresponds to taking direct extensions of the reads, j = 1 is extensions of extensions, etc.
7 = File prefix. Used for junctions file and contigs file.
8 = TwoHash.  True if you want to use a bigger bloom filter with only two hash functions.
    Can only use this is you also put in something for 7.
[] indicate optional arguments.

This will load a bloom filter with all the kmers from the reads, then scan through them to find all of the junctions.
It will print all of the junctions to a file named file_prefix.junctions, 
and print some summary info about the run to stdout.

****Note*****
When you change Mink.cpp, you have to recompile it specifically using
"g++ --std=c++0x -c -o Mink.o Mink.cpp"
Will fix this next week.  